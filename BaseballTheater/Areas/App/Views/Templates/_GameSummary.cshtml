

<template id="game-summary">
	<div class="game-summary" v-bind:data-homecode="game.homeFileCode" v-bind:data-awaycode="game.away_file_code">
		<a v-bind:href="getGameLink(game)" class="game-link"></a>
		<table>
			<tr class="headers">
				<td class="status">
					<small v-if="game">
						{{game.status.status}}
						<span v-bind:data-time="game.date" v-if="!game.linescore">
							({{getStatusTime(game)}})
						</span>
					</small>
				</td>
				<template v-if="game.linescore">
					<td class="inning" v-for="n in 9">
						<strong>{{getLinescoreLabel(game, n)}}</strong>
					</td>
					<td class="runs">R</td>
					<td class="hits">H</td>
					<td class="errors">E</td>
				</template>
			</tr>
			<tr class="team away">
				<td class="team-info">
					<span class="team-logo dark" v-bind:class="game.away_file_code"></span>
					<span class="team-name">
						<span class="team-name-wrap">
							{{game.away_team_name}}
							<template v-if="!game.linescore">
								({{game.away_record}})
							</template>
						</span>
						<template v-if="!game.linescore && game.away_probable_pitcher">
							<span class="probable-pitcher">{{game.away_probable_pitcher.last_name}}  ({{game.away_probable_pitcher.wins}}-{{game.away_probable_pitcher.losses}}, {{game.away_probable_pitcher.era}})</span>
						</template>
					</span>
				</td>
				<template v-if="game.linescore">
					<td class="inning score-box" v-for="n in 9">
						{{getLinescoreItem(game, n - 1, "away")}}
					</td>
					<td class="runs score-box">{{linescoreItem(game.linescore.r.away)}}</td>
					<td class="hits score-box">{{linescoreItem(game.linescore.h.away)}}</td>
					<td class="errors score-box">{{linescoreItem(game.linescore.e.away)}}</td>
				</template>
			</tr>

			<tr class="team home">
				<td class="team-info">
					<span class="team-logo dark" v-bind:class="game.home_file_code"></span>
					<span class="team-name">
						<span class="team-name-wrap">
							{{game.home_team_name}}

							<template v-if="!game.linescore">
								({{game.home_record}})
							</template>
						</span>

						<template v-if="!game.linescore && game.home_probable_pitcher">
							<span class="probable-pitcher">{{game.home_probable_pitcher.last_name}}  ({{game.home_probable_pitcher.wins}}-{{game.home_probable_pitcher.losses}}, {{game.home_probable_pitcher.era}})</span>
						</template>
					</span>
				</td>
				<template v-if="game.linescore">
					<td class="inning score-box" v-for="n in 9">
						{{getLinescoreItem(game, n - 1, "home")}}
					</td>
					<td class="runs score-box">{{linescoreItem(game.linescore.r.home)}}</td>
					<td class="hits score-box">{{linescoreItem(game.linescore.h.home)}}</td>
					<td class="errors score-box">{{linescoreItem(game.linescore.e.home)}}</td>
				</template>
			</tr>
		</table>
	</div>
</template>


<template id="game-summary-simple">
	<div class="game-summary-simple" v-bind:data-homecode="game.homeFileCode" v-bind:data-awaycode="game.away_file_code">
		<a v-bind:href="getGameLink(game)" class="game-link"></a>
		<div class="team-row away-team">
			<div class="team-info">
				<div class="team-city team-color" v-bind:class="[game.away_file_code]">{{game.away_team_city}}</div>
				<div class="team-name team-color" v-bind:class="[game.away_file_code]">{{game.away_team_name}}</div>
			</div>
			<div class="score" v-if="game.linescore">{{game.linescore.r.away}}</div>
		</div>
		<div class="inning-status">
			<span>{{getCurrentInning(game)}}</span>
		</div>
		<div class="team-row home-team">
			<div class="team-info">
				<div class="team-city team-color" v-bind:class="[game.home_file_code]">{{game.home_team_city}}</div>
				<div class="team-name team-color" v-bind:class="[game.home_file_code]">{{game.home_team_name}}</div>
			</div>
			<div class="score" v-if="game.linescore">{{game.linescore.r.home}}</div>
		</div>
		<div class="footer">
			<!--<span>{{getTopPlaysCount(game)}} top plays</span>-->
		</div>
	</div>
</template>

@*


	@{
		var game = Model;

		var startAtInningIndex = 0;
		var inningCount = 9;
		var dayString = "";
		if (game != null && game.Linescore != null && game.Linescore.Innings != null && game.Linescore.Innings.Length > inningCount)
		{
			inningCount = game.Linescore.Innings.Length;
			startAtInningIndex = inningCount - 9;
		}

		if (game != null)
		{
			dayString = game.DateObj.ToString("yyyyMMdd");
		}

		var eventTimeString = string.Format("{0}{1} {2}", game.EventTime, game.EventTimeAmPm, game.TimeZone);
	}

	<div class="game-summary" data-homecode="@game.HomeFileCode" data-awaycode="@game.AwayFileCode">
		<a href="/game/@dayString/@game.GamePk" class="game-link"></a>

		<table>
			<tr>
				<td class="status">
					<small>
						@game.Status.Status
						@if (game.Linescore == null)
						{
							<span data-time="@game.DateObj">
								 - @eventTimeString
							</span>
						}
					</small>
				</td>
				@if (game.Linescore != null)
				{
					for (var i = startAtInningIndex; i < inningCount; i++)
					{
						<td class="inning">
							<strong>@(i + 1)</strong>
						</td>
					}
					<td class="runs">R</td>
					<td class="hits">H</td>
					<td class="errors">E</td>
				}
			</tr>
			<tr class="team away">
				<td class="team-info">
					<span class="team-logo dark @game.AwayFileCode"></span>
					<span class="team-name">@game.AwayTeamName</span>
				</td>
				@if (game.Linescore != null && game.Linescore.Innings != null)
				{
					for (var i = startAtInningIndex; i < inningCount; i++)
					{
						var value = "-";
						if (game.Linescore.Innings.Length > i)
						{
							var inning = game.Linescore.Innings[i];
							if (inning.Away != null)
							{
								value = inning.Away;
							}
						}
						<td class="inning score-box">@value</td>
					}
					<td class="runs score-box">@game.Linescore.Runs.Away</td>
					<td class="hits score-box">@game.Linescore.Hits.Away</td>
					<td class="errors score-box">@game.Linescore.Errors.Away</td>
				}
			</tr>
			<tr class="team home">
				<td class="team-info">
					<span class="team-logo dark @game.HomeFileCode"></span>
					<span class="team-name">@game.HomeTeamName</span>
				</td>
				@if (game.Linescore != null && game.Linescore.Innings != null)
				{
					for (var i = startAtInningIndex; i < inningCount; i++)
					{
						var value = "-";
						if (game.Linescore.Innings.Length > i)
						{
							var inning = game.Linescore.Innings[i];
							if (inning.Home != null)
							{
								value = inning.Home;
							}
						}
						<td class="inning score-box">@value</td>
					}
					<td class="runs score-box">@game.Linescore.Runs.Home</td>
					<td class="hits score-box">@game.Linescore.Hits.Home</td>
					<td class="errors score-box">@game.Linescore.Errors.Home</td>
				}
			</tr>
		</table>
	</div>

*@