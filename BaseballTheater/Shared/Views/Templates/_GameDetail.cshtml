

<template id="highlight">
	<div class="highlight">
		<h2>{{highlight.headline}}</h2>
		<div class="video">
			<video v-bind:src="getDefaultUrl(highlight)" v-bind:poster="getDefaultThumb(highlight)" controls preload="none"></video>
			<div class="play-cover"></div>
		</div>

		<div class="links">
			<span>Direct: </span>
			<a v-for="link in getLinks(highlight)" v-bind:href="link.url">{{link.label}}</a>
		</div>
	</div>
</template>

@*

	<div class="highlight @recapClass">
		<h2>@highlight.Headline - @highlight.Duration</h2>
		@if (highlight.Urls != null && highlight.Thumbs != null && highlight.Urls.Any(a => a.EndsWith("mp4")))
		{
			var urls = highlight.Urls.Where(a => a.EndsWith("mp4")).OrderBy(a => a);
			var bigurl = urls.LastOrDefault();
			var medurl = urls.ElementAtOrDefault(urls.Count() - 3);
			if (bigurl != null)
			{
				var thumbnail = highlight.Thumbs.LastOrDefault() ?? highlight.Thumb;

				<div class="video">
					<video src="@medurl" controls preload="none" poster="@thumbnail"></video>
					<div class="play-cover"></div>
				</div>

				<div class="links">
					<span>Direct: </span>
					@foreach (var url in urls)
					{
						var label = Regex.Match(url, "\\d{4}K");

						if (label.Captures.Count > 0)
						{
							<a href="@url">@label.Captures[0]</a>
						}
					}
				</div>
			}
		}
		else
		{
			<p>Oops, MLB messed up and there's no video file. <a href="http://m.mlb.com/video/v@(highlight.Id)" target="_blank">See?</a> Broken.
			</p>
		}
	</div>

*@